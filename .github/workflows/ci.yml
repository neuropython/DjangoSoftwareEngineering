name: Basic-Ci

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:17
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
    steps:
          - name: Check out code
            uses: actions/checkout@v2

          - name: Set up Docker
            run: |
              sudo apt-get update
              sudo apt-get install -y docker-compose

          - name: Create .env file
            run: |
              echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
              echo "DEBUG=${{ secrets.DEBUG }}" >> .env
              echo "USER=testuser" >> .env
              echo "PASSWORD=testpassword" >> .env
              echo "DATABSE=testdb" >> .env
              echo "HOST=db " >> .env
              echo "PORT=5432" >> .env

          - name: Build and start Containers
            run: docker-compose up --build -d

          - name: Execute unit tests
            run: docker exec $(docker-compose ps -q api) python DjangoSoftarweEngineering/manage.py test DjangoSoftarweEngineering/FirstApp/tests
            # modify the path if necessary
  docs:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up environment
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Generate API documentation
        run: |
          source venv/bin/activate
          python DjangoSoftarweEngineering/manage.py generateschema > docs.json
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          DATABSE: ${{ secrets.DATABSE }}
          USER: ${{ secrets.USER }}
          PASSWORD: ${{ secrets.PASSWORD }}
          HOST: ${{ secrets.HOST }}
          PORT: ${{ secrets.PORT }}
          
      - name: Commit and push documentation
        run: |
        
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add docs.json index.html 
          git commit -m "Update API documentation"
          git push origin master
        env:
          
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}